{"version":3,"sources":["styles/images/helen.png","styles/images/kyle.png","styles/images/brien.png","styles/images/isaac.png","styles/images/Trello.png","styles/images/Github.png","components/Footer.js","components/Login.js","components/Register.js","components/HomeComponent.js","components/LocalComponent.js","components/StateComponent.js","components/NationalComponent.js","components/Team.js","components/Trello.js","components/Github.js","components/About.js","components/Why.js","components/logoutButton.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FooterPage","react_default","a","createElement","mdbreact","color","className","fluid","md","href","Date","getFullYear","React","Component","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_handleUsername","event","value","target","setState","username","_handlePassword","password","_handleSubmit","preventDefault","axios","post","state","then","response","data","user","console","log","doLoggedIn","sessionStorage","setItem","streetaddress","currentstate","zipcode","history","push","catch","err","redirectToPreviousRoute","id","name","from","location","pathname","Redirect","to","xl","icon","onSubmit","label","placeholder","type","autocomplete","onChange","Link","Register","_handleName","_handleStreetAddress","_handleCity","city","_handleCurrentState","_handleZipcode","_React$createElement","_React$createElement2","left","defineProperty","Home","outline","Locals","office","personOfficeInfo","_this2","getItem","addressUrl","encodeURI","concat","fetch","headers","Content-Type","json","results","newResults","values","ocdArray","officesArray","personInfoArray","countyKey","councilKey","keys","forEach","element","includes","indicesArray","officeIndices","wonderfulData","map","index","positionData","positionName","positionIndices","officialIndices","people","index2","masterArray","_loop","i","personInfo","TwitterHandle","personAddress","address","phoneNumber","phones","personEmail","emails","personPhoto","photoUrl","personUrl","urls","channels","theirTwitterHandle","officeName","personName","party","twitter","email","photo","url","length","error","officeNames","item","lg","ecommerce","align","cascade","top","style","width","height","src","alt","Fragment","line1","line2","zip","dist","dataSource","sourceType","screenName","options","onLoad","size","tag","floating","social","States","divisionId","Nationals","Team","helen","brien","kyle","isaac","Trello","hover","waves","Trellopic","Github","githubpic","rounded","About","Why","withRouter","onClick","clickLogout","App","res","isLoggedIn","toggleCollapse","isOpen","get","_this3","BrowserRouter","dark","expand","navbar","nav","caret","right","components_logoutButton","clickLogin","Route","exact","path","render","HomeComponent","assign","components_Login","components_Register","component","components_Footer","Boolean","window","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a286f2b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/helen.4337cd52.png\";","module.exports = __webpack_public_path__ + \"static/media/kyle.241334f4.png\";","module.exports = __webpack_public_path__ + \"static/media/brien.895757cf.png\";","module.exports = __webpack_public_path__ + \"static/media/isaac.7430d311.png\";","module.exports = __webpack_public_path__ + \"static/media/Trello.77ecf82a.png\";","module.exports = __webpack_public_path__ + \"static/media/Github.bee36bb7.png\";","import React, { Component } from \"react\";\nimport { Col, Container, Row, Footer } from \"mdbreact\";\n\nimport Styles from '../styles/Footer.css';\n\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link,\n    Switch,\n    Redirect\n  } from \"react-router-dom\";\n  \n\n  class FooterPage extends React.Component {\n    render() {\n    return (\n    <Footer color=\"indigo darken-4 gradient\" className=\"font-small pt-4 mt-4\">\n      <Container fluid className=\"text-center\">\n          <Row>\n          <Col md=\"6\">\n          <h5 className=\"title indigo darker-4\">Polifactual</h5>\n          <p>\n            Polifactual was a capstone project created by four DigitalCrafts Students. \n          </p>\n          </Col>\n          <Col md=\"2\">\n          <h5 className=\"title indigo darker-4 \">Help</h5>\n            <li className=\"list-unstyled\">\n              <a href=\"#!\">Contact Us</a>\n            </li>\n            <li className=\"list-unstyled\">\n              <a href=\"#!\">Client Services</a>\n            </li>\n            <li className=\"list-unstyled\">\n              <a href=\"#!\">Site Map</a>\n            </li>\n            <li className=\"list-unstyled\">\n              <a href=\"#!\">Privacy Policy</a>\n            </li>\n            <li className=\"list-unstyled\">\n              <a href=\"#!\">Terms of Use</a>\n            </li>\n          </Col>\n          <Col md=\"2\" className=\"\">\n          <h5 className=\"title indigo darker-4 \">About</h5>\n            <li className=\"list-unstyled\">\n              <a href=\"#!\">About Polifactual</a>\n            </li>\n            <li className=\"list-unstyled\">\n              <a href=\"#!\">Careers</a>\n            </li>\n            <li className=\"list-unstyled\">\n              <a href=\"#!\">Meet the Team</a>\n            </li>\n          </Col>\n          <Col md=\"2\" className=\"\">\n          <h5 className=\"title indigo darker-4\">Follow Us</h5>\n            <li className=\"list-unstyled\">\n              <a href=\"https://github.com/Kllicks/Polifactual\">Github</a>\n            </li>\n            <li className=\"list-unstyled\">\n              <a href=\"https://trello.com/b/pipJjSew/capstone-project\">Trello</a>\n            </li>\n          </Col>\n        </Row>\n      </Container>\n        <div className=\"footer-copyright text-center py-3\">\n          <Container fluid>\n            <h5>&copy; {new Date().getFullYear()} Copyright:{\" \"}\n            Helen, Kyle, Brien, Isaac Fonseca . All Rights Reserved</h5>\n          </Container>\n        </div>\n    </Footer>\n    );\n    }\n    }\n    \n    export default FooterPage;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Link, Switch, Redirect } from \"react-router-dom\";\nimport \"../styles/Register.css\";\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBMask, MDBRow, MDBCol, MDBIcon,\n\tMDBBtn, MDBView, MDBContainer, MDBCard, MDBCardBody, MDBInput, MDBFormInline } from \"mdbreact\";\n\n\nclass Login extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tredirectToPreviousRoute: false,\n\t\t\tid: '',\n\t\t\tname: '',\n\t\t\tusername: '',\n\t\t\tstreetaddress: '',\n\t\t\tcurrentstate: '',\n\t\t\tzipcode: '',\n\t\t\tpassword: ''\n\t\t};\n\t}\n\n\t_handleUsername = event => {\n\t\tconst value = event.target.value;\n\n\t\tthis.setState({\n\t\t\tusername: value\n\t\t});\n\t}\n\n\t_handlePassword = event => {\n\t\tconst value = event.target.value;\n\n\t\tthis.setState({\n\t\t\tpassword: value\n\t\t})\n\t}\n\n\t_handleSubmit = event => {\n\t\tevent.preventDefault();\n\n\t\taxios\n\t\t\t.post(\"/api/login\", this.state)\n\t\t\t.then(response => {\n\t\t\t\t// Need a response including the address from userObj\n\t\t\t\tif (response.data.user) {\n\t\t\t\t\tconsole.log(response.data)\n\t\t\t\t\tconst user = response.data.user;\n\t\t\t\t\tconsole.log(user);\n\t\t\t\t\tthis.props.doLoggedIn();\n\t\t\t\t\t// Save data to sessionStorage\n\t\t\t\t\t// sessionStorage.setItem('key', 'value');\n\t\t\t\t\tsessionStorage.setItem('streetaddress', user.streetaddress);\n\t\t\t\t\tsessionStorage.setItem('currentstate', user.currentstate);\n\t\t\t\t\tsessionStorage.setItem('zipcode', user.zipcode);\n\n\t\t\t\t\t// Get saved data from sessionStorage\n\t\t\t\t\t// let streetaddress = sessionStorage.getItem('streetaddress');\n\t\t\t\t\t// console.log(streetaddress);\n\t\t\t\t\t// let currentstate = sessionStorage.getItem('currentstate');\n\t\t\t\t\t// console.log(currentstate);\n\t\t\t\t\t// let zipcode = sessionStorage.getItem('zipcode');\n\t\t\t\t\t// console.log(zipcode);\n\n\t\t\t\t\tthis.props.history.push(\"/local\")\n\t\t\t\t} \n\t\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}\n\n\trender() {\n\t\tconst { from } = this.props.location.state || { from: { pathname: \"/\" } };\n    const { redirectToPreviousRoute } = this.state;\n\n    if (redirectToPreviousRoute) {\n      return <Redirect to={from} />;\n    }\n\treturn (\n\t\t<MDBMask className=\"d-flex justify-content-center align-items-center gradient\">\n\t\t<MDBContainer className=\"main\">\n\t\t  <MDBRow>\n\t\t\t<div className=\"white-text text-center text-md-left col-md-6 mt-xl-5 mb-5\">\n\t\t\t  <h1 className=\"h1-responsive font-weight-bold\">\n\t\t\t\tWelcome Back!{\" \"}\n\t\t\t  </h1>\n\t\t\t  <hr className=\"hr-light\" />\n\t\t\t\t<strong><p>We are happy to see you again!</p></strong>\n\t\t\t</div>\n\n\t\t\t<MDBCol md=\"6\" xl=\"5\" className=\"mb-4\">\n\t\t\t  <MDBCard id=\"classic-card\">\n\t\t\t\t<MDBCardBody className=\"z-depth-2 indigo-text\">\n\t\t\t\t  <h3 className=\"text-center\">\n\t\t\t\t\t<MDBIcon icon=\"user\" /> Login\n\t\t\t\t  </h3>\n\t\t\t\t  <hr className=\"hr-light\" />\n\n\t\t\t\t  <form className=\"signup-form\" onSubmit={this._handleSubmit}>\n\t\t\t\t\t<MDBInput \n\t\t\t\t  \tid=\"username\" \n\t\t\t\t  \tlabel=\"Your name\" \n\t\t\t\t  \ticon=\"user\" \n\t\t \t\t\t\tplaceholder=\"Username\" \n\t\t \t\t\t\ttype=\"text\" \n\t\t \t\t\t\tname=\"username\" \n\t\t \t\t\t\tautocomplete=\"off\" \n\t\t \t\t\t\tonChange={this._handleUsername}\n\t\t \t\t\t\tvalue={this.state.username} />\n\t\t\t\t\t<MDBInput\n\t\t\t\t  \t\tid=\"password\" \n\t\t\t\t\t\tlabel=\"Your password\"\n\t\t\t\t\t\ticon=\"lock\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"password\" \n\t\t \t\t\t\tautocomplete=\"off\"\n\t\t \t\t\t\tonChange={this._handlePassword}\n\t\t \t\t\t\tvalue={this.state.password} />\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"remember-me\">\n\t\t \t\t\t\t<input type=\"checkbox\"/>\n\t\t \t\t\t\t<span>Remember Me</span>\n\t\t \t\t\t</div>\n\n\t\t\t\t\t<div className=\"text-center mt-4 black-text\">\n\t\t\t\t\t\t<MDBBtn color=\"indigo\" type=\"submit\">Login</MDBBtn>\n\t\t\t\t\t\t<hr className=\"hr-light\" />\n\t\t\t\t\t</div>\n\t\t\t\t  \t</form>\n\t\t \t\t\t\t<a href=\"#\">Privacy Policy</a>\n\t\t\t\t\t<div className=\"register\">\n\t\t \t\t\t\t<span>Don't have an account yet?</span>\n\t\t\t\t\t\t <br />\n\t\t \t\t\t\t<Link to=\"/register\">Register here!</Link>\n\t\t \t\t\t</div>\n\n\t\t\t\t</MDBCardBody>\n\t\t\t  </MDBCard>\n\t\t\t</MDBCol>\n\t\t  </MDBRow>\n\t\t</MDBContainer>\n\t  </MDBMask>\n\t)\n}\n};\n\n\nexport default Login;","import React, {Component} from 'react';\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport '../styles/Register.css';\n\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBMask, MDBRow, MDBCol, MDBIcon,\n    MDBBtn, MDBView, MDBContainer, MDBCard, MDBCardBody, MDBInput, MDBFormInline } from \"mdbreact\";\n\n\nclass Register extends Component {\n    constructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tid: '',\n\t\t\tname: '',\n\t\t\tusername: '',\n            streetaddress: '',\n            city: '',\n\t\t\tcurrentstate: '',\n\t\t\tzipcode: '',\n\t\t\tpassword: ''\n\t\t};\n    }\n    \n    _handleName = event => {\n\t\tconst value = event.target.value;\n\n\t\tthis.setState({\n\t\t\tname: value\n\t\t});\n    }\n\n    _handleUsername = event => {\n\t\tconst value = event.target.value;\n\n\t\tthis.setState({\n\t\t\tusername: value\n\t\t});\n    }\n    \n    _handleStreetAddress = event => {\n\t\tconst value = event.target.value;\n\n\t\tthis.setState({\n\t\t\tstreetaddress: value\n\t\t});\n    }\n\n    _handleCity = event => {\n\t\tconst value = event.target.value;\n\n\t\tthis.setState({\n\t\t\tcity: value\n\t\t});\n    }\n\n    _handleCurrentState = event => {\n\t\tconst value = event.target.value;\n\n\t\tthis.setState({\n\t\t\tcurrentstate: value\n\t\t});\n    }\n\n    _handleZipcode = event => {\n\t\tconst value = event.target.value;\n\n\t\tthis.setState({\n\t\t\tzipcode: value\n\t\t});\n    }\n\n\t_handlePassword = event => {\n\t\tconst value = event.target.value;\n\n\t\tthis.setState({\n\t\t\tpassword: value\n\t\t})\n\t}\n\n\t_handleSubmit = event => {\n\t\tevent.preventDefault();\n\n\t\taxios\n\t\t\t.post(\"/api/register\", this.state)\n\t\t\t.then(response => {\n                // Need a response including the address from userObj\n                if (response.data.user) {\n                    console.log(response.data)\n\t\t\t\t\tconst user = response.data.user;\n\t\t\t\t\tconsole.log(user);\n\t\t\t\t\tthis.props.doLoggedIn();\n\t\t\t\t\t// Save data to sessionStorage\n\t\t\t\t\t// sessionStorage.setItem('key', 'value');\n\t\t\t\t\tsessionStorage.setItem('streetaddress', user.streetaddress);\n\t\t\t\t\tsessionStorage.setItem('city', user.city);\n\t\t\t\t\tsessionStorage.setItem('currentstate', user.currentstate);\n\t\t\t\t\tsessionStorage.setItem('zipcode', user.zipcode);\n\t\t\t\t\t// Get saved data from sessionStorage\n\t\t\t\t\t// let streetaddress = sessionStorage.getItem('streetaddress');\n\t\t\t\t\t// console.log(streetaddress);\n\t\t\t\t\t// let city = sessionStorage.getItem('city');\n\t\t\t\t\t// console.log(city);\n\t\t\t\t\t// let currentstate = sessionStorage.getItem('currentstate');\n\t\t\t\t\t// console.log(currentstate);\n\t\t\t\t\t// let zipcode = sessionStorage.getItem('zipcode');\n                    // console.log(zipcode);\n                    this.props.history.push('/Local')\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            });\n\t}\n\n    render() {\n        return (\n          <MDBMask className=\"d-flex justify-content-center align-items-center gradient\">\n            <MDBContainer className=\"main\">\n            <MDBRow>\n                <div className=\"white-text text-center text-md-left col-md-6 mt-xl-5 mb-5 signuparea\">\n                  <h1 className=\"h1-responsive font-weight-bold\">\n                    Register now!{\" \"}\n                  </h1>\n                  <hr className=\"hr-light\" />\n                  <h6 className=\"mb-4\">\n                   Register and keep your address on file! That way you can login and see your current representatives!\n                  </h6>\n                  {/* <MDBBtn outline color=\"white\">\n                    Learn More\n                  </MDBBtn> */}\n                </div>\n                <MDBCol md=\"6\" xl=\"5\" className=\"mb-4\">\n                  <MDBCard id=\"classic-card\">\n                    <MDBCardBody className=\"z-depth-2 indigo-text sizing\" >\n                    <form className=\"signup-form\" onSubmit={this._handleSubmit}>\n                      <h3 className=\"text-center\">\n                        <MDBIcon icon=\"user\" /> Register:\n                      </h3>\n                      <hr className=\"hr-light\" />\n                      {/* Form */}\n                        <MDBInput left\n                            id=\"name\" \n                            label=\"Your name\" \n                            icon=\"user\" \n                            type=\"text\" \n                            name=\"name\" \n                            autocomplete=\"off\" \n                            onChange={this._handleName} \n                            value={this.state.name} />\n                        <MDBInput \n                            id =\"username\" \n                            label=\"Username\" \n                            icon=\"user\" \n                            type=\"text\" \n                            name=\"username\" \n                            autocomplete=\"off\" \n                            onChange={this._handleUsername} \n                            value={this.state.username} />\n                        <MDBInput\n                            id=\"password\" \n                            label=\"Your password\"\n                            icon=\"lock\"\n                            type=\"password\"\n                            name=\"password\" \n                            autocomplete=\"off\"\n                            onChange={this._handlePassword}\n\t\t\t\t\t\t\tvalue={this.state.password}\n                            />\n                        <MDBInput \n                            id =\"streetaddress\" \n                            label=\"Street Address\" \n                            icon=\"address-book\"\n                            type=\"text\" \n                            name=\"streetaddress\" \n                            autocomplete=\"off\"\n                            name=\"streetaddress\" \n                            onChange={this._handleStreetAddress}\n\t\t\t\t\t\t\tvalue={this.state.streetaddress} />\n                        <MDBInput \n                            id =\"city\" \n                            label=\"City\" \n                            icon=\"address-book\"\n                            type=\"text\" \n                            name=\"city\" \n                            autocomplete=\"off\"\n                            name=\"city\" \n                            onChange={this._handleCity}\n\t\t\t\t\t\t\tvalue={this.state.city} />\n                        <MDBInput \n                            id =\"currentstate\" \n                            label=\"State\" \n                            icon=\"address-book\" \n                            type=\"text\" \n                            name=\"currentstate\" \n                            autocomplete=\"off\"\n                            onChange={this._handleCurrentState}\n\t\t\t\t\t\t\tvalue={this.state.currentstate}/>\n                        <MDBInput \n                            id =\"zipcode\" \n                            icon=\"address-book\" \n                            label=\"Zipcode\" \n                            type=\"text\" \n                            name=\"zipcode\" \n                            autocomplete=\"off\"\n                            onChange={this._handleZipcode}\n\t\t\t\t\t\t\tvalue={this.state.zipcode} />\n                        <div className=\"remember-me\">\n                            <input type=\"checkbox\"/>\n                            <span>I accept Terms of Service</span>\n                        </div>\n                        <div className=\"text-center mt-4 black-text\">\n                            <MDBBtn color=\"indigo\" type=\"submit\">Register Now!</MDBBtn>\n                        </div>\n                        </form>\n                            <a href=\"#\">Privacy Policy</a>\n                        <div className=\"register\">\n                            <span>Already have an account?</span>\n                            <br />\n                            <Link to=\"/login\">Log In Here</Link>\n                        </div>\n                    </MDBCardBody>\n                  </MDBCard>\n                </MDBCol>\n              </MDBRow>\n            </MDBContainer>\n          </MDBMask>\n       \n        )\n    }\n};\n\nexport default Register;\n\n\n","import React from 'react';\n\nimport Styles from '../styles/Home.css';\n\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\n\nimport {\n  MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBMask, MDBRow,\n  MDBCol, MDBIcon,\n  MDBBtn, MDBView, MDBContainer, MDBCard, MDBCardBody, MDBInput, MDBFormInline, NavLink\n  } from \"mdbreact\";\n\n\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div>\n        <MDBContainer>\n          <MDBMask className=\"d-flex justify-content-center align-items-center gradient\">\n              <MDBContainer className=\"main\">\n                <MDBRow>\n                  <div className=\"white-text text-center text-md-left col-md-6 mt-xl-5 mb-5\">\n                    <h1 className=\"h1-responsive font-weight-bold mt-sm-5\">\n                      {/* Polifactual{\" \"} */}\n                    </h1>\n                    {/* <hr className=\"hr-light\" /> */}\n                    <h6 className=\"mb-4\">\n                      {/* Bringing you your local, state, and national legislative representatives' information right to you from one source. */}\n                    </h6>\n                    {/* <MDBBtn color=\"indigo darken-4\">Register Now!</MDBBtn> */}\n                  </div>\n                  <MDBCol md=\"6\" xl=\"5\" className=\"mt-xl-5\">\n                    <div className=\"black-text text-center text-md-left\">\n                    <h1 className=\"h1-responsive font-weight-bold mt-sm-5;\">\n                      Polifactual{\" \"}\n                    </h1>\n                    <hr className=\"hr-light\" />\n                    <h6 className=\"mb-4 \">\n                      Bringing you your local, state, and national legislative representatives' information right to you from one source.\n                    </h6>\n                    {/* <MDBBtn color=\"indigo darken-4\">Register Now!</MDBBtn> */}\n                    <MDBBtn outline color=\"black\">\n                      <strong>\n                        <NavLink to=\"/About\">Learn More</NavLink>\n                      </strong>\n                    </MDBBtn>\n                  </div>\n                  </MDBCol>\n                </MDBRow>\n              </MDBContainer>\n            </MDBMask>\n        </MDBContainer>\n      </div>\n    );\n  }\n}\nexport default Home;\n\n\n","import React, { Component } from \"react\";\nimport { Timeline } from \"react-twitter-widgets\";\n\nimport { MDBIcon, MDBContainer, MDBBtn } from \"mdbreact\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImage,\n  CardTitle,\n  CardText,\n  Col,\n  MDBRow,\n  MDBCol,\n  MDBCard,\n  MDBCardImage,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardText,\n  MDBCardFooter,\n  MDBTooltip\n} from \"mdbreact\";\n\nclass Locals extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      office: [],\n      personOfficeInfo: []\n    };\n  }\n\n  componentDidMount() {\n    let streetaddress = sessionStorage.getItem(\"streetaddress\"); // streetaddress equals the value that the useradded to the street address from the database.\n    let city = sessionStorage.getItem(\"city\");\n    let state = sessionStorage.getItem(\"currentstate\");\n    let zipcode = sessionStorage.getItem(\"zipcode\");\n\n    const addressUrl = encodeURI(\n      `${streetaddress} ${city} ${state} ${zipcode}`\n    );\n    console.log(addressUrl);\n\n    fetch(\n      `https://www.googleapis.com/civicinfo/v2/representatives?address=${addressUrl}&includeOffices=true&key=AIzaSyB3cRW6zO8D3INc-NHDFA-0ck77gQAYpOU`,\n      { headers: { \"Content-Type\": \"application/json; charset=utf-8\" } }\n    )\n      .then(response => response.json())\n      .then(results => {\n        let newResults = Object.values(results); // newResults is the json response array of the users civic representives at each elected level of government.\n        console.log(newResults);\n        let ocdArray = newResults[2]; // ocdArray equals the names of the ocd divisions returned from the api.\n        let officesArray = newResults[3]; // officesArray equals the names of the office and info about that office for each level of elected government and its.\n        let personInfoArray = newResults[4]; // personInfoArray is the names and info for the person who currently has been elected to the seat of the newResults array.\n        let countyKey = \"\"; // create a new variable countyKey as an empty sting to accept an upcoming assignment\n        let councilKey = \"\"; // create a new variable councilKey as an empty sting to accept an upcoming assignment\n        Object.keys(ocdArray).forEach(element => {\n          // for each key in the ocd array make a new array with the value of that key under the following circumspances:\n          // if (\n          //   (element.includes(\"county\") || element.includes(\"city\")) && // if the key includes the value \"county\" or the key includes the value \"city\".\n          //   !element.includes(\"council\") // and the key does not inclyde \"council\"\n          // ) {\n          //   countyKey = element; // add the value of the key to the countyKey variable.\n          // }\n          console.log(element);\n          if (element.includes(\"council\")) {\n            // if the key includes the value council...\n            councilKey = element; // add the value of the key to the councilKey variable.\n          } else if (element.includes(\"county\") || element.includes(\"city\")) {\n            console.log(\"found a county or city\");\n            countyKey = element; // add the value of the key to the countyKey variable.\n          }\n        });\n        console.log(councilKey);\n        console.log(countyKey);\n        console.log(\"those were the keysz\");\n\n        // let localOfficeName = ocdArray[councilKey].name; // this is the name of the office held by the key value that includes council from the above forEach/if statement.\n        let indicesArray = [];\n        if (councilKey) {\n          indicesArray = ocdArray[councilKey].officeIndices;\n        }\n        // this array will hold the values of the officeIndices that has the value of councilKey from the ocdArray.\n        indicesArray = indicesArray.concat(ocdArray[countyKey].officeIndices); // combine each officeIndices in the indices array.\n        let wonderfulData = indicesArray.map(index => {\n          // create a variable wonderfulData that will map through each index of the indicesArray, then...\n          let positionData = { positionName: officesArray[index].name }; // position data will equal the value of name of the corresponding index of the officesArray.\n          let positionIndices = officesArray[index].officialIndices; // positionIndices will equal the officalIndices value of the index of that officeArray.\n          positionData.people = positionIndices.map(index2 => {\n            // positionData.people will map through the values of positionIndices and then...\n            return personInfoArray[index2]; //retun the corresponding index from the personInfoArray for each.\n          });\n          return positionData; // return the positionData || name of that index.\n        });\n\n        /////////////////////////////////////////////////\n        //\n        //  wonderfulData will return an array of objects\n        //  each index of the object will have keys with the names of\n        //    people: whos value will have another array of objects with info about that person such as address, email, phone number, etc.\n        //    positionName: which will have a key value equal to the name of the position.\n        //\n        /////////////////////////////////////////////////\n\n        console.log(wonderfulData);\n\n        let masterArray = []; //create a new array called masterarray. setting it as an empty array awaiting assignment.\n\n        for (let i = 0; i < wonderfulData.length; i++) {\n          // for loop starting at \"i\" = 0 we will increment \"i\" by one each time we loop through as long as i less than or equal to the length of the wonderfulData array.\n          let office = wonderfulData[i].positionName;\n          let personInfo = wonderfulData[i].people[0]; // personInfo equals each index of personInfoArray.\n\n          let TwitterHandle; // establish a TwitterHandle variable.\n\n          let personAddress = personInfo.address ? personInfo.address[0] : null; //personAddress equals each personInfo.address array index 0 or null.\n          let phoneNumber = personInfo.phones ? personInfo.phones[0] : null; //personAddress equals each personInfo.address array index 0 or null.\n\n          let personEmail = personInfo.emails || null; // if an elected official has an email address add that value to personEmail.\n          let personPhoto = personInfo.photoUrl || null; //if an elected official has a photo url add that value to personPhoto.\n          let personUrl = personInfo.urls || null; // if an elected official has a website (personal or for the department) add that value to personUrl.\n\n          wonderfulData.forEach(index => {\n            // for each index in offices array.offical indices.\n\n            if (personInfo.channels) {\n              // if the index of personInfoArray has a .channels value.\n              personInfo.channels.forEach(index2 => {\n                // for each index of .channels\n                if (index2.type === \"Twitter\") {\n                  // if the key name of that index equals twitter.\n                  let theirTwitterHandle = index2.id; //theirTwitterHandle equals the key value of twitter key.\n                  TwitterHandle = theirTwitterHandle; // add the value of theirTwitterHandle to TwitterHandle.\n                  return TwitterHandle; //return the value of TwitterHandle so it can be accesed outside of the forEach.\n                } else {\n                  let TwitterHandle = null; // if that index of the personInfoArray.channels does not have a twitter set their TwitterHandle to null.\n                  return TwitterHandle; // return the value of TwitterHandle so it can be accesed outside of the forEach.\n                }\n              });\n            }\n          });\n          // establish a variable named personOfficenfo as an object to hold values we want to used for state.\n          let personOfficeInfo = {\n            officeName: office,\n            personName: personInfo.name,\n            address: personAddress,\n            officeIndices: office.officialIndices,\n            party: personInfo.party,\n            phoneNumber: phoneNumber,\n            twitter: TwitterHandle,\n            email: personEmail,\n            photo: personPhoto,\n            url: personUrl\n          };\n          masterArray.push(personOfficeInfo); // push each instance in personOfficeInfo info into masterArray.\n        }\n\n        this.setState({\n          personOfficeInfo: masterArray\n        });\n      })\n      .catch(function(error) {\n        console.log(\"Looks like there was a problem: \\n\", error);\n      });\n  }\n\n  render() {\n    let officeNames = this.state.personOfficeInfo.map(function(item, index) {\n      // map through the item and index of each item inthis.state.personofficeinfo.\n      return (\n\n\n<section className=\"text-center my-5\">\n<MDBCol lg=\"12\" md=\"12\" className=\"mb-lg-0 mb-12\">\n  <MDBCard ecommerce align=\"center\">\n      {item.photo ? (\n        <MDBCardImage\n          className=\"rounded-circle pt-4\"\n          cascade\n          top \n          style={{width: '18.5rem', height: '18rem' }} src={item.photo} alt=\"\" />\n      ) : (\n          <img\n            style={{ width: \"18.5rem\", height: \"18rem\" }}\n            src={\"/images/NoPhotoAvailable.jpg\"}\n            alt=\"\"\n          />\n        )}\n    <MDBCardBody cascade className=\"text-center\">\n    <a href=\"#!\" className=\"text-muted\">\n                <h5>{item.personName ? <><a href={item.url}>{item.personName}</a></> : null}</h5>\n              </a>\n      <MDBCardTitle>\n        <strong>\n        {item.officeName ? <>{item.officeName}</> : null}\n        </strong>\n      </MDBCardTitle>\n      <hr/>\n      <MDBCardText>\n        <strong> Address: </strong>\n        {item.address ? (\n                    <>\n                      {item.address.line1 ? <>{item.address.line1}</> : null}\n                      {item.address.line2 ? <>{item.address.line2}</> : null}\n                      {item.address.city ? <>{item.address.city}</> : null}\n                      {item.address.state ? <>{item.address.state}</> : null}\n                      {item.address.zip ? <>{item.address.zip}</> : null}\n                    </>\n                  ) : null}\n                  <br/>\n                  <strong>Party: </strong>\n                  {item.party && item.party !== \"Unknown\" ? (\n                    <>\n                      <>{item.party}</>\n                    </>\n                  ) : null}\n\n     \n    \n     <br/>\n     <strong>Phone Number: </strong>\n     {item.phoneNumber ? <>{item.phoneNumber}</> : null}\n     <br/>\n     <strong>Twitter: </strong>\n     {item.twitter ? (\n       <>\n         <Timeline\n           dataSource={{\n             sourceType: \"profile\",\n             screenName: item.twitter\n           }}\n           options={{\n             username: item.twitter,\n             height: \"400\",\n             width: \"60%\"\n           }}\n           onLoad={() => console.log(\"Timeline is loaded!\")}\n         />\n       </>\n     ) : null}\n      </MDBCardText>\n      <MDBCardFooter className=\"px-1\">\n          {item.email ? (\n            <span className=\"float-right\">\n            <MDBBtn size=\"lg\" tag=\"a\" floating social=\"email\" href={\"mailto:\" + item.email}>\n            <MDBIcon icon=\"envelope\" />\n          </MDBBtn>\n          </span>\n          ) : null}\n      </MDBCardFooter>\n    </MDBCardBody>\n  </MDBCard>\n</MDBCol>\n{/* </MDBRow> */}\n\n</section>\n      );\n    });\n    return (\n      <div className=\"Main\">\n      <br></br>\n        <strong><h1 className=\"text-white\">Local Representatives</h1></strong>\n        <hr/>\n        <>{officeNames}</>\n      </div>\n    );\n  }\n}\n\nexport default Locals;\n","import React, { Component } from \"react\";\nimport { Timeline } from \"react-twitter-widgets\";\nimport { MDBIcon, MDBContainer, MDBBtn } from \"mdbreact\";\n\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImage,\n  CardTitle,\n  CardText,\n  Col\n} from \"mdbreact\";\n\nimport {\n  MDBRow,\n  MDBCol,\n  MDBCard,\n  MDBCardImage,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardText,\n  MDBCardFooter,\n  MDBTooltip\n} from \"mdbreact\";\n\n// import styles from '../styles/State.css';\n\nclass States extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      office: [],\n      personOfficeInfo: []\n    };\n  }\n\n  componentDidMount() {\n    let streetaddress = sessionStorage.getItem(\"streetaddress\");\n    console.log(streetaddress);\n    let zipcode = sessionStorage.getItem(\"zipcode\");\n    console.log(zipcode);\n\n    const addressUrl = encodeURI(`${streetaddress} ${zipcode}`);\n    console.log(addressUrl);\n\n    fetch(\n      `https://www.googleapis.com/civicinfo/v2/representatives?address=${addressUrl}&includeOffices=true&key=AIzaSyB3cRW6zO8D3INc-NHDFA-0ck77gQAYpOU`,\n      { headers: { \"Content-Type\": \"application/json; charset=utf-8\" } }\n    )\n      .then(response => response.json())\n      .then(results => {\n        // console.log(Object.values(results[3]));\n        let newResults = Object.values(results); // newResults will be json response array of the users civic representives at each elected level of government.\n        console.log(newResults);\n        let officesArray = newResults[3]; // officesArray equals the names of the office and info about that office for each level of elected government and its\n        console.log(newResults[3]);\n        console.log(newResults[4]);\n        let personInfoArray = newResults[4]; // personInfoArray is the names and info for the person who currently has been elected to the seat of the newResults array.\n        let masterArray = [];\n        // console.log(newResults[3][2].divisionId);\n        officesArray.forEach(office => {\n          // for each office inside of the offices array.\n          if (\n            office.divisionId === newResults[3][2].divisionId || // if office.divisionId equals the second or third index...\n            office.divisionId === newResults[3][3].divisionId\n          ) {\n            //   console.log(office.name);\n            //   console.log(office.officialIndices);\n            office.officialIndices.forEach(index => {\n              // for each index of  the officialIndices array inside of  office...\n              // console.log(personInfoArray[index]);\n              let personInfo = personInfoArray[index]; // set personInfo equal to each index of th personInfoArray.\n              let TwitterHandle; // establish a TwitterHandle variable to be assigned a value later.\n              let personEmail = personInfo.emails || null; // if an elected official has an email address add that value to personEmail.\n              let personPhoto = personInfo.photoUrl || null; //if an elected official has a photo url add that value to personPhoto\n              let personUrl = personInfo.urls || null; // if an elected official has a website (personal or for the department) add that value to personUrl\n\n              if (personInfoArray[index].channels) {\n                // check wether each index in the personInfoArray has a key named channels if they do...\n                // console.log(\"fart machine\");\n                personInfo.channels.forEach(index2 => {\n                  // for each key name of the channels array of objects...\n                  if (index2.type === \"Twitter\") {\n                    // If the value of that key name is Twitter...\n                    let theirTwitterHandle = index2.id; // assign the key value of the Twitter key name to the variable theirTwitterHandle;\n                    TwitterHandle = theirTwitterHandle; // assing theirTwitterHandle to TwitterHandle;\n                    return TwitterHandle; // returnthe value of TwitterHandle so it can be used outside of the forEach.\n                  }\n                });\n              }\n              console.log(office.name);\n              let personOfficeInfo = {\n                officeName: office.name,\n                personName: personInfo.name,\n                address: personInfo.address[0],\n                party: personInfo.party,\n                phoneNumber: personInfo.phones[0],\n                twitter: TwitterHandle,\n                email: personEmail,\n                photo: personPhoto,\n                url: personUrl\n              };\n              masterArray.push(personOfficeInfo);\n            });\n          }\n        });\n\n        this.setState({\n          personOfficeInfo: masterArray\n        });\n      });\n\n    // fetch(\n    //   \"https://www.googleapis.com/civicinfo/v2/elections?&key=AIzaSyB3cRW6zO8D3INc-NHDFA-0ck77gQAYpOU\",\n    //   { headers: { \"Content-Type\": \"application/json; charset=utf-8\" } }\n    // )\n    //   .then(response => response.json())\n    //   .then(data => console.log(data));\n  }\n\n  render() {\n    let officeNames = this.state.personOfficeInfo.map(function(item, index) {\n      return (\n\n        <section className=\"text-center my-5\">\n        {/* <MDBRow> */}\n        <MDBCol lg=\"12\" md=\"12\" className=\"mb-lg-0 mb-12\">\n          <MDBCard ecommerce align=\"center\">\n              {item.photo ? (\n                <MDBCardImage\n                  className=\"rounded-circle pt-4\"\n                  cascade\n                  top \n                  style={{width: '18.5rem', height: '18rem' }} src={item.photo} alt=\"\" />\n              ) : (\n                  <img\n                    style={{ width: \"13rem\", height: \"15rem\" }}\n                    src={\"/images/NoPhotoAvailable.jpg\"}\n                    alt=\"\"\n                  />\n                )}\n            <MDBCardBody cascade className=\"text-center\">\n              <a href=\"#!\" className=\"text-muted\">\n                <h5>{item.personName ? <><a href={item.url}>{item.personName}</a></> : null}</h5>\n              </a>\n              <MDBCardTitle>\n                <strong>\n                {item.officeName ? <>{item.officeName}</> : null}\n                </strong>\n              </MDBCardTitle>\n              <hr/>\n              <MDBCardText>\n                <strong> Address: </strong>\n              {item.address.line1 ? <>{item.address.line1}</> : null}\n             \n             {item.address.line2 ? <>{item.address.line2}</> : null}\n          <br/>\n             {item.address.city ? <>{item.address.city}</> : null}\n              <text> , </text>\n             {item.address.state ? <>{item.address.state}</> : null}\n          <text> </text>\n             {item.address.zip ? <>{item.address.zip}</> : null}\n             <br/>\n             <strong>Party: </strong>\n             {item.party ? <>{item.party}</> : null}\n             <br/>\n             <strong>Phone Number: </strong>\n             {item.phoneNumber ? <>{item.phoneNumber}</> : null}\n             <br/>\n             <strong>Twitter: </strong>\n             {item.twitter ? (\n               <>\n                 <Timeline\n                   dataSource={{\n                     sourceType: \"profile\",\n                     screenName: item.twitter\n                   }}\n                   options={{\n                     username: item.twitter,\n                     height: \"400\",\n                     width: \"60%\"\n                   }}\n                   onLoad={() => console.log(\"Timeline is loaded!\")}\n                 />\n               </>\n             ) : null}\n              </MDBCardText>\n              <MDBCardFooter className=\"px-1\">\n                  {item.email ? (\n                    <span className=\"float-right\">\n                    <MDBBtn size=\"lg\" tag=\"a\" floating social=\"email\" href={\"mailto:\" + item.email}>\n                    <MDBIcon icon=\"envelope\" />\n                  </MDBBtn>\n                  </span>\n                  ) : null}\n              </MDBCardFooter>\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n      {/* </MDBRow> */}\n\n        </section>\n\n      );\n    });\n\n    return (\n     \n      <div className=\"Main\">\n        <br></br>\n        <strong><h1 className=\"text-white\">State Representatives</h1></strong>\n        <hr/>\n        <>{officeNames}</>\n      </div>\n      \n    );\n  }\n}\n\nexport default States;\n","import { Timeline } from \"react-twitter-widgets\";\nimport React, { Component } from \"react\";\n\n// import Styles from '../styles/National.css';\n\nimport {\n  MDBIcon,\n  MDBContainer,\n  MDBBtn,\n  MDBRow,\n  MDBCol,\n  MDBCollapse\n} from \"mdbreact\";\n\nimport {\n  MDBCardImage,\n  MDBCardTitle,\n  MDBCardText,\n  MDBCardFooter,\n  MDBTooltip\n} from \"mdbreact\";\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImage,\n  CardTitle,\n  CardText,\n  Col\n} from \"mdbreact\";\n\nimport {\n  MDBCard,\n  MDBCardUp,\n  MDBCardBody,\n  MDBAvatar,\n  MDBRotatingCard\n} from \"mdbreact\";\nimport { spacing } from \"material-ui/styles\";\n\nclass Nationals extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // flipped1: false,\n      office: [],\n      personOfficeInfo: []\n    };\n  }\n\n  // handleFlipping = id => {\n  //   const cardId = `flipped${id}`;\n  //   this.setState({ [cardId]: !this.state[cardId] });\n  // }\n\n  componentDidMount() {\n    let streetaddress = sessionStorage.getItem(\"streetaddress\");\n    console.log(streetaddress);\n    let zipcode = sessionStorage.getItem(\"zipcode\");\n    console.log(zipcode);\n\n    const addressUrl = encodeURI(`${streetaddress} ${zipcode}`);\n    console.log(addressUrl);\n\n    fetch(\n      `https://www.googleapis.com/civicinfo/v2/representatives?address=${addressUrl}&includeOffices=true&key=AIzaSyB3cRW6zO8D3INc-NHDFA-0ck77gQAYpOU`,\n      { headers: { \"Content-Type\": \"application/json; charset=utf-8\" } }\n    )\n      .then(response => response.json())\n      .then(results => {\n        // console.log(Object.values(results[3]));\n        let newResults = Object.values(results); // newResults will be json response array of the users civic representives at each elected level of government.\n        let officesArray = newResults[3]; // officesArray equals the names of the office and info about that office for each level of elected government and its\n        console.log(newResults[3]);\n        console.log(newResults[4]);\n        let personInfoArray = newResults[4]; // personInfoArray is the names and info for the person who currently has been elected to the seat of the newResults array.\n        let masterArray = [];\n        // console.log(newResults[3][0].divisionId);\n\n        officesArray.forEach(office => {\n          if (office.divisionId === newResults[3][0].divisionId) {\n            //   console.log(office.name);\n            //   console.log(office.officialIndices);\n            office.officialIndices.forEach(index => {\n              // console.log(personInfoArray[index]);\n              let personInfo = personInfoArray[index];\n              //   console.log(\"hi\");\n              //   console.log(personInfoArray[index].channels);\n              let TwitterHandle;\n              let personEmail = personInfo.emails || null; // if an elected official has an email address add that value to personEmail.\n              let personPhoto = personInfo.photoUrl || null; //if an elected official has a photo url add that value to personPhoto\n              let personUrl = personInfo.urls || null; // if an elected official has a website (personal or for the department) add that value to personUrl\n              if (personInfoArray[index].channels) {\n                // console.log(\"fart machine\");\n                personInfo.channels.forEach(index2 => {\n                  if (index2.type === \"Twitter\") {\n                    // console.log(\"hey buddy!\");\n                    // console.log(index2.id);\n                    let theirTwitterHandle = index2.id;\n                    TwitterHandle = theirTwitterHandle;\n                    return TwitterHandle;\n                  }\n                });\n              }\n              console.log(TwitterHandle);\n              let personOfficeInfo = {\n                officeName: office.name,\n                personName: personInfo.name,\n                address: personInfo.address[0],\n                party: personInfo.party,\n                phoneNumber: personInfo.phones[0],\n                twitter: TwitterHandle,\n                email: personEmail,\n                photo: personPhoto,\n                url: personUrl\n              };\n              masterArray.push(personOfficeInfo);\n            });\n          }\n        });\n\n        this.setState({\n          personOfficeInfo: masterArray\n        });\n      });\n\n    // fetch(\n    //   \"https://www.googleapis.com/civicinfo/v2/elections?&key=AIzaSyB3cRW6zO8D3INc-NHDFA-0ck77gQAYpOU\",\n    //   { headers: { \"Content-Type\": \"application/json; charset=utf-8\" } }\n    // )\n    //   .then(response => response.json())\n    //   .then(data => console.log(data));\n  }\n\n  render() {\n    let officeNames = this.state.personOfficeInfo.map((item, index) => {\n      return (\n        <section className=\"text-center\">\n          <MDBRow>\n            <MDBCol lg=\"12\" md=\"12\" className=\"mb-lg-0 mb-12\">\n              <MDBCard ecommerce align=\"center\">\n                {item.photo ? (\n                  <MDBCardImage\n                    className=\"rounded-circle pt-4\"\n                    cascade\n                    top\n                    style={{ width: \"18.5rem\", height: \"18rem\" }}\n                    src={item.photo}\n                    alt=\"\"\n                  />\n                ) : (\n                  <img\n                    style={{ width: \"13rem\", height: \"15rem\" }}\n                    src={\"/images/NoPhotoAvailable.jpg\"}\n                    alt=\"\"\n                  />\n                )}\n                <MDBCardBody cascade className=\"text-center\">\n                  <a href=\"#!\" className=\"text-muted\">\n                    <h5>\n                      {item.personName ? (\n                        <>\n                          <a href={item.url}>{item.personName}</a>\n                        </>\n                      ) : null}\n                    </h5>\n                  </a>\n                  <MDBCardTitle>\n                    <strong>\n                      {item.officeName ? <>{item.officeName}</> : null}\n                    </strong>\n                  </MDBCardTitle>\n                  <hr />\n                  <MDBCardText>\n                    <strong> Address: </strong>\n                    {item.address.line1 ? <>{item.address.line1}</> : null}\n                    <br/>\n                    {item.address.line2 ? <>{item.address.line2}</> : null}\n                    <br />\n                    {item.address.city ? <>{item.address.city}</> : null}\n                    <text> , </text>\n                    {item.address.state ? <>{item.address.state}</> : null}\n                    <text> </text>\n                    {item.address.zip ? <>{item.address.zip}</> : null}\n                    <br />\n                    <strong>Party: </strong>\n                    {item.party ? <>{item.party}</> : null}\n                    <br />\n                    <strong>Phone Number: </strong>\n                    {item.phoneNumber ? <>{item.phoneNumber}</> : null}\n                    <br />\n                    <strong>Twitter: </strong>\n                    {item.twitter ? (\n                      <>\n                        <Timeline\n                          dataSource={{\n                            sourceType: \"profile\",\n                            screenName: item.twitter\n                          }}\n                          options={{\n                            username: item.twitter,\n                            height: \"400\",\n                            width: \"60%\"\n                          }}\n                          onLoad={() => console.log(\"Timeline is loaded!\")}\n                        />\n                      </>\n                    ) : null}\n                  </MDBCardText>\n                  <MDBCardFooter className=\"px-1\">\n                    {item.email ? (\n                      <span className=\"float-right\">\n                        <MDBBtn\n                          size=\"lg\"\n                          tag=\"a\"\n                          floating\n                          social=\"email\"\n                          href={\"mailto:\" + item.email}\n                        >\n                          <MDBIcon icon=\"envelope\" />\n                        </MDBBtn>\n                      </span>\n                    ) : null}\n                  </MDBCardFooter>\n                </MDBCardBody>\n              </MDBCard>\n            </MDBCol>\n          </MDBRow>\n        </section>\n      );\n    });\n\n    return (\n      <div>\n        <br></br>\n        <strong><h1 className=\"text-white\">National Representatives</h1></strong>\n        <hr/>\n        <>{officeNames}</>\n      </div>\n    );\n  }\n}\n\nexport default Nationals;\n","import React, { Component } from \"react\";\n\nimport {  MDBContainer, MDBRow, MDBCol, MDBCard, MDBAvatar, MDBCardBody, MDBIcon } from \"mdbreact\";\n\nimport styles from '../styles/Team.css';\n\nimport helen from '../styles/images/helen.png';\nimport kyle from '../styles/images/kyle.png';\nimport brien from '../styles/images/brien.png';\nimport isaac from '../styles/images/isaac.png';\n\n\n\n\nclass Team extends React.Component {\n    render() {\n      return (\n        <MDBContainer>\n        <MDBCard className=\"my-5 px-5 pt-5 pb-5 white text-center\">\n        <MDBCard>\n          <MDBCardBody>\n            <h2 className=\"h1-responsive font-weight-bold my-5\">\n              Our amazing team\n            </h2>\n            <p className=\"grey-text w-responsive mx-auto mb-5\">\n              Our team is compromised of four DigitalCrafts coding bootcamp graduates with varying backgrounds and interests. Below is a little bit more about us, check us out!\n            </p>\n            <MDBRow>\n              <MDBCol lg=\"3\" md=\"6\" className=\"mb-lg-0 mb-5\">\n                <img src={helen} className=\"rounded-circle z-depth-1 img-fluid newphotosize\" />\n                <h5 className=\"font-weight-bold mt-4 mb-3\">Helen Harris</h5>\n                <p className=\"text-uppercase indigo-text\">Software Engineer</p>\n                <p className=\"grey-text\">\n                A creative and detailed individual, with the ability to develop effective and efficient \n                solutions. \n                </p>\n                <ul className=\"list-unstyled mb-0\">\n                <a href=\"mailto:hchang0803@outlook.com\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"envelope\" className=\"indigo-text\" />\n                </a>\n                <a href=\"https://www.linkedin.com/in/helen-harris-50205b15/\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"linkedin\" className=\"indigo-text\" />\n                  </a>\n                  <a href=\"https://github.com/hharris0803\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"github\" className=\"indigo-text\" />\n                  </a>\n                </ul>\n              </MDBCol>\n\n              <MDBCol lg=\"3\" md=\"6\" className=\"mb-lg-0 mb-5\">\n              <img src={brien} className=\"rounded-circle z-depth-1 img-fluid\" />\n                <h5 className=\"font-weight-bold mt-4 mb-3\">Brien Mizell</h5>\n                <p className=\"text-uppercase indigo-text\">Software Engineer</p>\n                <p className=\"grey-text\">\n                  Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n                  ipsa accusantium doloremque rem laudantium totam aperiam.\n                </p>\n                <ul className=\"list-unstyled mb-0\">\n                <a href=\"mailto:brienmizell@me.com\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"envelope\" className=\"indigo-text\" />\n                </a>\n                <a href=\"https://www.linkedin.com/in/brienmizell/\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"linkedin\" className=\"indigo-text\" />\n                  </a>\n                  <a href=\"https://github.com/brienmizell\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"github\" className=\"indigo-text\" />\n                  </a>\n                </ul>\n              </MDBCol>\n\n              <MDBCol lg=\"3\" md=\"6\" className=\"mb-lg-0 mb-5\">\n              <img src={kyle} className=\"rounded-circle z-depth-1 img-fluid\" />\n                <h5 className=\"font-weight-bold mt-4 mb-3\">Kyle Sekellick</h5>\n                <p className=\"text-uppercase indigo-text\">Software Engineer</p>\n                <p className=\"grey-text\">\n                  Experience developing software applications for clients. Seeking opportunities to leverage software development skills in a collaborative environment.\n                </p>\n                <ul className=\"list-unstyled mb-0\">\n                <a href=\"mailto:sekellickkyle@yahoo.com\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"envelope\" className=\"indigo-text\" />\n                </a>\n                  <a href=\"https://www.linkedin.com/in/kyle-sekellick-b16070135/\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"linkedin\" className=\"indigo-text\" />\n                  </a>\n                  <a href=\"https://github.com/Kllicks\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"github\" className=\"indigo-text\" />\n                  </a>\n                </ul>\n              </MDBCol>\n\n              <MDBCol lg=\"3\" md=\"6\" className=\"mb-lg-0 mb-5\">\n              <img src={isaac} className=\"rounded-circle z-depth-1 img-fluid\" />\n                <h5 className=\"font-weight-bold mt-4 mb-3\">Isaac Fonseca</h5>\n                <p className=\"text-uppercase indigo-text\">Software Engineer</p>\n                <p className=\"grey-text\">\n                  Exercise Physiologist turned Full- Stack Software Engineer, with a passion for competitive video gaming and soccer. \n                </p>\n                <ul className=\"list-unstyled mb-0\">\n                <a href=\"mailto:isaacfo1010@gmail.com\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"envelope\" className=\"indigo-text\" />\n                </a>\n                  <a href=\"https://www.linkedin.com/in/isaac-fonseca10/\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"linkedin\" className=\"indigo-text\" />\n                  </a>\n                  <a href=\"https://github.com/isaacfo\" className=\"p-2 fa-lg\">\n                    <MDBIcon icon=\"github\" className=\"indigo-text\" />\n                  </a>\n                </ul>\n              </MDBCol>\n            </MDBRow>\n          </MDBCardBody>\n          </MDBCard>\n        </MDBCard>\n        </MDBContainer>\n  );\n}\n}\n\nexport default Team;","import React, { Component } from \"react\";\n\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBMask, MDBIcon, MDBView, MDBBtn } from \"mdbreact\";\n\nimport Trellopic from '../styles/images/Trello.png';\nimport Styles from '../styles/Trello.css';\n\nconst Trello = () => {\n  return (\n    <MDBContainer>\n    <MDBCard className=\"my-5 px-5 pt-5 pb-5 white\">\n    <MDBCard>\n        <MDBRow>\n          <MDBCol md=\"12\">\n            <MDBCard>\n              <MDBView hover cascade waves>\n                <img\n                  src= {Trellopic}\n                  className=\"img-fluid\"\n                /> \n              </MDBView>\n              <MDBCardBody cascade className=\"text-center\">\n                <h1 className=\"font-weight-bold my-5\">\n                  Trello\n                </h1>\n                <p className=\"grey-text\">\n                Our team chose to use Trello as our choice of project planning software. We chose to use Trello to manage our web project for two reasons. It is free and helps keep us organized and focused. \n              </p>\n                <MDBBtn className=\"btn-fb waves-light\" color=\"indigo darken-4\">\n                  <MDBIcon icon=\"trello\" />\n                  <a href=\"https://trello.com/b/pipJjSew/capstone-project\"><p className=\"white-text\">Click here to check out our Trello page!</p></a>\n                </MDBBtn>\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n        </MDBRow>\n        </MDBCard>\n    </MDBCard>\n    </MDBContainer>\n  );\n}\n\nexport default Trello;","import React from \"react\";\nimport {  MDBContainer, MDBRow, MDBCol, MDBCard, MDBIcon, MDBBtn  } from \"mdbreact\";\n\nimport Styles from '../styles/Github.css';\nimport githubpic from '../styles/images/Github.png';\n\nconst Github = () => {\n  return (\n    <MDBContainer>\n      <MDBCard className=\"my-5 px-5 pt-5 pb-5 white text-center\">\n      {/* <section className=\"text-center my-5 px-5 pt-5 pb-5\"> */}\n        <MDBRow>\n          <MDBCol md=\"12\" className=\"mb-4\">\n            <MDBCard\n              \n            >\n            <img src={githubpic} className=\"img-fluid\" />\n              <div className=\"text-white text-center d-flex align-items-center rgba-black-strong py-5 px-4 white\">\n                <div>\n                  <h2 className=\"indigo-text py-3 font-weight-bold\">\n                    <MDBIcon icon=\"github\" size=\"lg\" />\n                    <br />\n                    <strong>Github</strong>\n                  </h2>\n                  <p className=\"pb-3 grey-text\">\n                    Our group decided to use Github to make it easy to collaborate and look back at previous versions of our work. \n                    Please check out this projects repo on Github!\n                    Dont forget to also check out our Trello Board! \n                  </p>\n                  <MDBBtn color=\"indigo\" rounded size=\"md\" href=\"https://github.com/Kllicks/Polifactual\">\n                    <MDBIcon icon=\"clone\" className=\"left\"/>  See Github for Project\n                  </MDBBtn>\n                </div>\n              </div>\n            </MDBCard>\n          </MDBCol>\n        </MDBRow>\n      {/* </section> */}\n      </MDBCard>\n      </MDBContainer>\n  );\n}\n\nexport default Github;","import React from 'react';\n\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\n\nimport {\n  MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBMask, MDBRow,\n  MDBCol, MDBIcon,\n  MDBBtn, MDBView, MDBContainer, MDBCard, MDBCardBody, MDBInput, MDBFormInline\n  } from \"mdbreact\";\n\n\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div>\n      <MDBContainer>\n        <MDBCard className=\"my-5 px-5 pt-5 pb-5 white\">\n        <MDBCard>\n        <h2 className=\"h1-responsive font-weight-bold text-center my-5\">\n          What all can Polifactual do?\n        </h2>\n        <p className=\"lead grey-text w-responsive text-center mx-auto mb-5\">\n          Below you will see several points highlighting some of our features  \n        </p>\n        <MDBRow>\n          <MDBCol md=\"4\">\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"2\">\n                <MDBIcon\n                  icon=\"flag-checkered\"\n                  size=\"2x\"\n                  className=\"deep-purple-text\"\n                />\n              </MDBCol>\n              <MDBCol size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">National</h5>\n                <p className=\"grey-text\">\n                  Polifactual can display your legislative representatives at a national level\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"2\">\n                <MDBIcon icon=\"flask\" size=\"2x\" className=\"deep-purple-text\" />\n              </MDBCol>\n              <MDBCol size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">Experimental</h5>\n                <p className=\"grey-text\">\n                Want to see who represents other areas and not just your current locality? You can change your information to display other localities and inform you of other representatives.\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"2\">\n                <MDBIcon icon=\"glass\" size=\"2x\" className=\"deep-purple-text\" />\n              </MDBCol>\n              <MDBCol size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">Personal</h5>\n                <p className=\"grey-text\">\n                  Once you are registered, you will be able to see your unique homepage, with your local and state information.\n                </p>\n              </MDBCol>\n            </MDBRow>\n          </MDBCol>\n          <MDBCol md=\"4\" className=\"text-name\">\n            <img\n              className=\"img-fluid\"\n              src=\"https://mdbootstrap.com/img/Mockups/Transparent/Small/iphone-portfolio1.png\"\n              alt=\"\"\n            />\n          </MDBCol>\n          <MDBCol md=\"4\">\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"2\">\n                <MDBIcon icon=\"heart\" size=\"2x\" className=\"deep-purple-text\" />\n              </MDBCol>\n              <MDBCol size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">Twitter</h5>\n                <p className=\"grey-text\">\n                  Want to go ahead and follow your representatives or like their posts? Polifactual allows you to see twitter feeds for those who are on the social media site.\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"2\">\n                <MDBIcon icon=\"flash\" size=\"2x\" className=\"deep-purple-text\" />\n              </MDBCol>\n              <MDBCol size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">Rapid</h5>\n                <p className=\"grey-text\">\n                  With just a few clicks, all your relevant legislative information will be displayed before your eyes\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"2\">\n                <MDBIcon icon=\"magic\" size=\"2x\" className=\"deep-purple-text\" />\n              </MDBCol>\n              <MDBCol size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">Mobile</h5>\n                <p className=\"grey-text\">\n                Polifactual is on the go! Can be used on any mobile device with a web browser.\n                </p>\n              </MDBCol>\n            </MDBRow>\n          </MDBCol>\n        </MDBRow>\n      </MDBCard>\n      </MDBCard>\n      </MDBContainer>\n      </div>\n    );\n  }\n}\nexport default About;\n\n\n","import React from 'react';\n\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\n\nimport {\n  MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBMask, MDBRow,\n  MDBCol, MDBIcon,\n  MDBBtn, MDBView, MDBContainer, MDBCard, MDBCardBody, MDBInput, MDBFormInline\n  } from \"mdbreact\";\n\n\n\nclass Why extends React.Component {\n  render() {\n    return (\n      <div>\n <MDBContainer >\n <MDBCard className=\"my-5 px-5 pt-5 pb-5 white\">\n <MDBCard>\n         <h2 className=\"h1-responsive font-weight-bold text-center my-5\">\n           Why is it so great?\n         </h2>\n         <p className=\"lead grey-text w-responsive text-center mx-auto mb-5\">\n           For those that have struggled to keep informed about poltics that affect thier every day lives, we have developed Polifactual to bring you all the information relevant too your neighborhood with just a few clicks.\n         </p>\n\n         <MDBRow>\n           <MDBCol lg=\"5\" className=\"text-center text-lg-left\">\n             <img\n              className=\"img-fluid\"\n              src=\"https://mdbootstrap.com/img/Photos/Others/screens-section.jpg\"\n              alt=\"\"\n            />\n          </MDBCol>\n          <MDBCol lg=\"7\">\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"1\">\n                <MDBIcon icon=\"mail-forward\" size=\"lg\" className=\"indigo-text\" />\n              </MDBCol>\n              <MDBCol xl=\"10\" md=\"11\" size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">Local</h5>\n                <p className=\"grey-text\">\n                 Local info\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"1\">\n                <MDBIcon icon=\"mail-forward\" size=\"lg\" className=\"indigo-text\" />\n              </MDBCol>\n              <MDBCol xl=\"10\" md=\"11\" size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">State</h5>\n                <p className=\"grey-text\">\n                  State info\n                </p>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow className=\"mb-3\">\n              <MDBCol size=\"1\">\n                <MDBIcon icon=\"mail-forward\" size=\"lg\" className=\"indigo-text\" />\n              </MDBCol>\n              <MDBCol xl=\"10\" md=\"11\" size=\"10\">\n                <h5 className=\"font-weight-bold mb-3\">National</h5>\n                <p className=\"grey-text\">\n                Polifactual can display your legislative representatives at a national level, such as President, Vice-President and information pertaining to their seats.\n                </p>\n              </MDBCol>\n            </MDBRow>\n          </MDBCol>\n        </MDBRow>\n        </MDBCard>\n      </MDBCard>\n </MDBContainer>\n      </div>\n    );\n  }\n}\nexport default Why;\n\n\n","import React from 'react';\nimport { Navbar, NavbarBrand, NavbarNav, NavItem, NavLink, NavbarToggler, Collapse, FormInline, Dropdown, DropdownToggle, DropdownMenu,  DropdownItem } from \"mdbreact\";\nimport { MDBBtn } from \"mdbreact\";\nimport {\n    withRouter,\n\tBrowserRouter as Router,\n\tRoute,\n\tLink,\n\tSwitch,\n\tRedirect\n} from \"react-router-dom\";\nimport axios from 'axios';\n\n\nlet logoutButton = (props) => {\n    return (\n        <MDBBtn color=\"indigo darken-4\" onClick={props.clickLogout(props)}>Logout</MDBBtn>\n)};\nexport default withRouter(logoutButton);","import React, { Component } from \"react\";\nimport Styles from \"../styles/App.css\";\nimport FooterPage from \"./Footer\";\n\nimport Login from \"./Login\";\nimport Register from \"./Register\";\n\nimport Home from \"./HomeComponent\";\nimport Locals from \"./LocalComponent\";\nimport States from \"./StateComponent\";\nimport Nationals from \"./NationalComponent\";\nimport Team from \"./Team\";\nimport Trello from \"./Trello\";\nimport Github from \"./Github\";\nimport About from \"./About\";\nimport Why from \"./Why\";\n\nimport LogoutButton from \"./logoutButton\";\n\nimport axios from \"axios\";\n\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarNav,\n  NavItem,\n  NavLink,\n  NavbarToggler,\n  Collapse,\n  FormInline,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  \n} from \"mdbreact\";\nimport { MDBBtn, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false\n    };\n  }\n\n  clickLogout = props => {\n    return () => {\n      axios.post(\"/api/logout\").then(res => {\n        props.history.push(\"/\");\n        this.setState({ isLoggedIn: false });\n      });\n    };\n  };\n\n  toggleCollapse = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  doLoggedIn = () => {\n    this.setState({ isLoggedIn: true });\n  };\n\n  componentDidMount() {\n    axios.get(\"/api/verify\").then(res => {\n      if (res.data.user) {\n        this.setState({ isLoggedIn: true }, () => {\n          const user = res.data.user;\n          sessionStorage.setItem(\"streetaddress\", user.streetaddress);\n          sessionStorage.setItem(\"currentstate\", user.currentstate);\n          sessionStorage.setItem(\"zipcode\", user.zipcode);\n          console.log(\"logged in\");\n        });\n      } else {\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App bg\">\n        <Router>\n          <>\n            <Navbar color=\"transparent\" dark expand=\"md\">\n              <NavbarBrand>\n                <h2>\n                <strong className=\"white-text\">Polifactual</strong>\n                </h2>\n              </NavbarBrand>\n              <NavbarToggler onClick={this.toggleCollapse} />\n              <Collapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\n                <NavbarNav left>\n                  <NavItem >\n                    <NavLink to=\"/\">Home</NavLink>\n                  </NavItem>\n                  <NavItem >\n                    <NavLink to=\"/About\">About</NavLink>\n                  </NavItem>\n                  <NavItem >\n                    <NavLink to=\"/Why\">Why</NavLink>\n                  </NavItem>\n                  <NavItem >\n                    <NavLink to=\"/Github\">Github</NavLink>\n                  </NavItem>\n                  <NavItem >\n                    <NavLink to=\"/Trello\">Trello</NavLink>\n                  </NavItem>\n                  <NavItem >\n                    <NavLink to=\"/Team\">Meet The Team</NavLink>\n                  </NavItem>\n                      {this.state.isLoggedIn ? (\n                        <NavItem >\n                      \n                          <Dropdown>\n\n                          <DropdownToggle nav caret> Representatives </DropdownToggle>\n                          <MDBDropdownMenu className=\"dropdown-default\" right>\n                            <MDBDropdownItem href=\"/Local\">Local</MDBDropdownItem>\n                            <MDBDropdownItem href=\"/State\">State</MDBDropdownItem>\n                            <MDBDropdownItem href=\"/National\">National</MDBDropdownItem>\n                          </MDBDropdownMenu>\n                        </Dropdown>\n                   \n                        </NavItem>\n\n                      ) : null}\n                </NavbarNav>\n\n                <NavbarNav right>\n                  {this.state.isLoggedIn ? (\n                    <LogoutButton clickLogout={this.clickLogout} />\n                  ) : (\n                    <div>\n                      <Link to=\"/Register\">\n                        <MDBBtn\n                          floating\n                          color=\"indigo darken-4\"\n                          onClick={this.clickLogin}\n                        >\n                          Register\n                        </MDBBtn>\n                      </Link>\n                      <Link to=\"/Login\">\n                      <MDBBtn\n                        floating\n                        color=\"indigo darken-4\"\n                        onClick={this.clickLogin}\n                      >\n                        Login\n                      </MDBBtn>\n                    </Link>\n                    </div>\n                  )}\n                </NavbarNav>\n              </Collapse>\n            </Navbar>\n\n            {/* ROUTES */}\n            {/* <Route exact path=\"/\" component={Home} /> */}\n            <Route\n              exact\n              path=\"/\"\n              render={props => {\n                return <Home clickLogout={this.clickLogout} {...props} />;\n              }}\n            />\n            {/* <Route exact path=\"/Signup\" component={Signup} /> */}\n            <Route\n              exact\n              path=\"/Login\"\n              render={props => {\n                return <Login doLoggedIn={this.doLoggedIn} {...props} />;\n              }}\n            />\n            <Route\n              path=\"/Register\"\n              render={props => {\n                return <Register doLoggedIn={this.doLoggedIn} {...props} />;\n              }}\n            />\n            <Route path=\"/About\" component={About} />\n            <Route path=\"/Why\" component={Why} />\n            <Route path=\"/Github\" component={Github} />\n            <Route path=\"/Trello\" component={Trello} />\n            <Route path=\"/Team\" component={Team} />\n            <Route exact path=\"/Local\" component={Locals} />\n            <Route exact path=\"/State\" component={States} />\n            <Route exact path=\"/National\" component={Nationals} />\n          </>\n        </Router>\n\n        {/* Footer */}\n        <FooterPage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n\n\nReactDOM.render((<App/>), document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}